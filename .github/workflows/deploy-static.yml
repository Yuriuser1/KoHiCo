
name: üåê Deploy Static Version to reg.ru

on:
  workflow_dispatch:  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫
    inputs:
      deploy_type:
        description: '–¢–∏–ø –¥–µ–ø–ª–æ—è'
        required: true
        default: 'static'
        type: choice
        options:
          - static
          - full-nextjs

jobs:
  deploy-static:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v3
      
    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: üì¶ Cache yarn dependencies
      uses: actions/cache@v3
      with:
        path: |
          app/node_modules
          app/.yarn/cache
        key: ${{ runner.os }}-yarn-${{ hashFiles('app/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
          
    - name: üì¶ Install dependencies
      run: |
        cd app
        yarn install --frozen-lockfile
        
    - name: üî® Build static export
      run: |
        cd app
        # –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é —Å–±–æ—Ä–∫—É Next.js
        yarn build
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–∞–ø–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
        if [ -d "../deploy_package_REAL" ]; then
          echo "üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã"
          cp -r ../deploy_package_REAL/* ./out/ 2>/dev/null || mkdir -p ./out
          cp -r ../deploy_package_REAL/* ./out/
        else
          echo "üìÅ –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é —Å–±–æ—Ä–∫—É –∏–∑ Next.js"
          # –ü–æ–ø—Ä–æ–±—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
          yarn export 2>/dev/null || echo "Export –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º build"
        fi
        
    - name: üìã Prepare deployment files
      run: |
        mkdir -p static-deploy
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
        if [ -d "app/out" ]; then
          cp -r app/out/* static-deploy/
        elif [ -d "deploy_package_REAL" ]; then
          cp -r deploy_package_REAL/* static-deploy/
        else
          echo "‚ùå –ù–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –¥–µ–ø–ª–æ—è"
          exit 1
        fi
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π .htaccess –¥–ª—è reg.ru
        cat > static-deploy/.htaccess << 'EOF'
        # KoHiCo - –ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –∫–æ—Ä–µ–π—Å–∫–∞—è –∫–æ—Å–º–µ—Ç–∏–∫–∞
        DirectoryIndex index.html
        
        # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
        <IfModule mod_expires.c>
            ExpiresActive On
            ExpiresByType text/css "access plus 1 year"
            ExpiresByType application/javascript "access plus 1 year"
            ExpiresByType image/png "access plus 1 year"
            ExpiresByType image/jpg "access plus 1 year"
            ExpiresByType image/jpeg "access plus 1 year"
            ExpiresByType image/webp "access plus 1 year"
            ExpiresByType image/svg+xml "access plus 1 year"
        </IfModule>
        
        # –°–∂–∞—Ç–∏–µ
        <IfModule mod_deflate.c>
            AddOutputFilterByType DEFLATE text/html
            AddOutputFilterByType DEFLATE text/css
            AddOutputFilterByType DEFLATE application/javascript
            AddOutputFilterByType DEFLATE text/javascript
        </IfModule>
        
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
        <IfModule mod_headers.c>
            Header always set X-Content-Type-Options "nosniff"
            Header always set X-Frame-Options "SAMEORIGIN"
            Header always set X-XSS-Protection "1; mode=block"
        </IfModule>
        
        # –†–æ—É—Ç–∏–Ω–≥ –¥–ª—è SPA
        <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteRule ^catalog/?$ catalog.html [L]
            RewriteRule ^brands/?$ index.html#brands [R=301,L]
            RewriteRule ^about/?$ index.html#about [R=301,L]
            RewriteRule ^contact/?$ index.html#contact [R=301,L]
        </IfModule>
        EOF
        
        # –û–±–Ω–æ–≤–ª—è–µ–º sitemap —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–∞—Ç–æ–π
        cat > static-deploy/sitemap.xml << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
          <url>
            <loc>https://www.kohico.ru/</loc>
            <lastmod>$(date +%Y-%m-%d)</lastmod>
            <priority>1.0</priority>
          </url>
          <url>
            <loc>https://www.kohico.ru/catalog</loc>
            <lastmod>$(date +%Y-%m-%d)</lastmod>
            <priority>0.9</priority>
          </url>
          <url>
            <loc>https://www.kohico.ru/brands</loc>
            <lastmod>$(date +%Y-%m-%d)</lastmod>
            <priority>0.8</priority>
          </url>
        </urlset>
        EOF
        
        echo "üìÅ –§–∞–π–ª—ã –¥–ª—è –¥–µ–ø–ª–æ—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã:"
        ls -la static-deploy/
        
    - name: üì§ Deploy to reg.ru via FTP
      uses: SamKirkland/FTP-Deploy-Action@4.3.3
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./static-deploy/
        server-dir: ${{ secrets.FTP_SERVER_DIR }}
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.DS_Store
          **/Thumbs.db
          
    - name: üßπ Cleanup old files on server
      uses: appleboy/ssh-action@v0.1.5  
      continue-on-error: true
      with:
        host: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        script: |
          # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –∫—ç—à–∞
          find ${{ secrets.FTP_SERVER_DIR }} -name "*.log" -delete
          find ${{ secrets.FTP_SERVER_DIR }} -name "*.tmp" -delete
          
    - name: ‚úÖ Success notification
      if: success()
      run: |
        echo "üéâ KoHiCo —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–µ–ø–ª–æ–µ–Ω–∞!"
        echo "üåê –°–∞–π—Ç: https://www.kohico.ru"
        echo "üìÖ –í—Ä–µ–º—è: $(date)"
        echo "üì¶ –í–µ—Ä—Å–∏—è: –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è HTML/CSS/JS"
        
    - name: ‚ùå Failure notification
      if: failure() 
      run: |
        echo "‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≤–µ—Ä—Å–∏–∏ KoHiCo"
        echo "üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:"
        echo "   - FTP –¥–æ—Å—Ç—É–ø—ã –≤ —Å–µ–∫—Ä–µ—Ç–∞—Ö GitHub"
        echo "   - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É reg.ru"
        echo "   - –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º"
