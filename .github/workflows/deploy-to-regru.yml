
name: üöÄ Deploy KoHiCo to reg.ru

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v3
      
    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: ./app/yarn.lock
        
    - name: üì¶ Install dependencies
      run: |
        cd app
        yarn install --frozen-lockfile
        
    - name: üî® Build Next.js application
      run: |
        cd app
        yarn build
        
    - name: üìã Create deployment package
      run: |
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–µ–ø–ª–æ—è
        mkdir -p deploy-output
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã Next.js
        cp -r app/.next/static deploy-output/
        cp -r app/.next/standalone deploy-output/ 2>/dev/null || true
        cp -r app/public deploy-output/
        
        # –ö–æ–ø–∏—Ä—É–µ–º –≥–æ—Ç–æ–≤—ã–µ HTML —Ñ–∞–π–ª—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è
        if [ -d "deploy_package_REAL" ]; then
          cp -r deploy_package_REAL/* deploy-output/
        fi
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .htaccess –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–∞ Apache
        cat > deploy-output/.htaccess << 'EOF'
        DirectoryIndex index.html index.htm index.php
        
        <IfModule mod_rewrite.c>
        RewriteEngine On
        
        # –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞
        RewriteRule ^catalog/?$ catalog.html [L]
        RewriteRule ^brands/?$ index.html#brands [L,R=301]
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule . /index.html [L]
        </IfModule>
        
        # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
        <IfModule mod_expires.c>
          ExpiresActive On
          ExpiresByType text/css "access plus 1 month"
          ExpiresByType application/javascript "access plus 1 month"
          ExpiresByType image/png "access plus 1 month"
          ExpiresByType image/jpg "access plus 1 month"
          ExpiresByType image/jpeg "access plus 1 month"
        </IfModule>
        
        # –°–∂–∞—Ç–∏–µ —Ñ–∞–π–ª–æ–≤
        <IfModule mod_deflate.c>
          AddOutputFilterByType DEFLATE text/html text/css application/javascript
        </IfModule>
        EOF
        
        # –°–æ–∑–¥–∞–µ–º robots.txt
        cat > deploy-output/robots.txt << 'EOF'
        User-agent: *
        Allow: /
        
        Sitemap: https://www.kohico.ru/sitemap.xml
        EOF
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ —Å–æ–∑–¥–∞–ª–æ—Å—å
        echo "üìÅ Deployment package contents:"
        ls -la deploy-output/
        
    - name: üì§ Deploy via FTP to reg.ru
      uses: SamKirkland/FTP-Deploy-Action@4.3.3
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deploy-output/
        server-dir: ${{ secrets.FTP_SERVER_DIR }}
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.next/cache/**
          **/.logs/**
        
    - name: üîÑ Alternative: Deploy via SSH (if FTP fails)
      if: failure()
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∞–π—Ç–∞
          cd ${{ secrets.SITE_DIRECTORY }}
          
          # –ö–ª–æ–Ω–∏—Ä—É–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
          if [ -d ".git" ]; then
            git pull origin master
          else
            git clone https://github.com/Yuriuser1/KoHiCo.git .
          fi
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
          cd app
          yarn install
          yarn build
          
          # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è PM2)
          pm2 restart kohico || pm2 start yarn --name "kohico" -- start
          
    - name: ‚úÖ Deployment Success Notification
      if: success()
      run: |
        echo "üéâ KoHiCo —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–µ–ø–ª–æ–µ–Ω –Ω–∞ www.kohico.ru!"
        echo "üìÖ –î–∞—Ç–∞: $(date)"
        echo "üîó –°–∞–π—Ç: https://www.kohico.ru"
        
    - name: ‚ùå Deployment Failure Notification  
      if: failure()
      run: |
        echo "‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è KoHiCo"
        echo "üìÖ –î–∞—Ç–∞: $(date)"
        echo "üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ–∫—Ä–µ—Ç—ã GitHub –∏ –¥–æ—Å—Ç—É–ø—ã –∫ —Å–µ—Ä–≤–µ—Ä—É"
